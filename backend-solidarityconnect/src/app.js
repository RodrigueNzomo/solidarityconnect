// Importation des dÃ©pendances nÃ©cessaires
const express = require("express");  // Framework Express pour gÃ©rer les routes et le serveur
const dotenv = require("dotenv");   // BibliothÃ¨que pour charger les variables d'environnement
const cors = require("cors");       // Middleware pour gÃ©rer les problÃ¨mes de Cross-Origin Resource Sharing (CORS)
const db = require("./models");     // Importation des modÃ¨les (incluant Sequelize et la connexion Ã  la base de donnÃ©es)

// Charger les variables d'environnement Ã  partir du fichier .env
dotenv.config();

// Initialisation de l'application Express aprÃ¨s avoir chargÃ© les variables d'environnement
const app = express();

// Middleware : permet de parser les corps de requÃªtes JSON
app.use(express.json());  // Middleware pour analyser les donnÃ©es JSON dans les requÃªtes

// Middleware : permettre les requÃªtes cross-origin depuis tous les domaines
app.use(cors());  // Permet Ã  l'application de recevoir des requÃªtes provenant de diffÃ©rents domaines

// Importation des routes aprÃ¨s initialisation de l'application
const authRoutes = require("./routes/authRoutes");  // Import des routes liÃ©es Ã  l'authentification

// Utilisation des routes dÃ©finies pour l'authentification
app.use("/api/auth", authRoutes);  // Tous les chemins commenÃ§ant par "/api/auth" utiliseront les routes d'authentification

// DÃ©finition du port du serveur, soit Ã  partir de la variable d'environnement, soit par dÃ©faut 5000
const PORT = process.env.PORT || 5000;

// Synchronisation de la base de donnÃ©es avec Sequelize
// La mÃ©thode `sync` crÃ©e les tables dans la base de donnÃ©es en fonction des modÃ¨les dÃ©finis
db.sequelize.sync({ force: false }).then(() => {
  console.log("Base de donnÃ©es synchronisÃ©e !");  // Affichage d'un message de succÃ¨s lorsque la synchronisation est terminÃ©e
});

// DÃ©marrage du serveur sur le port spÃ©cifiÃ©
app.listen(PORT, () => {
  console.log(`ğŸš€ Serveur dÃ©marrÃ© sur le port ${PORT}`);  // Affichage d'un message pour indiquer que le serveur fonctionne
});
