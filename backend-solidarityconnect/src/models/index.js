const Sequelize = require("sequelize"); // ‚úÖ Corrig√© : importer Sequelize correctement
const sequelize = require("../config/database"); // ‚úÖ V√©rifier que `database.js` exporte `sequelize`
const db = {};

// üìå Stocker Sequelize et l'instance de connexion
db.Sequelize = Sequelize;
db.sequelize = sequelize;

// ‚úÖ Initialiser le mod√®le correctement avec `sequelize` et `Sequelize.DataTypes`
db.User = require("./User")(sequelize, Sequelize.DataTypes);

/// Synchroniser les mod√®les avec la base de donn√©es si n√©cessaire
db.sequelize.sync({ alter: true }) // üü¢ `alter: true` ajuste les tables sans perte de donn√©es
.then(() => console.log("‚úÖ Synchronisation des mod√®les r√©ussie"))
.catch((error) => console.error("‚ùå Erreur lors de la synchronisation des mod√®les :", error));

// üìå V√©rification de la connexion √† MySQL
db.sequelize
  .authenticate()
  .then(() => {
    console.log("‚úÖ Connexion √† MySQL r√©ussie !");
  })
  .catch((error) => {
    console.error("‚ùå Erreur de connexion √† MySQL :", error);
  });

module.exports = db;
